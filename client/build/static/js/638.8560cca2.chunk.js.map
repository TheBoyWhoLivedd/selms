{"version":3,"file":"static/js/638.8560cca2.chunk.js","mappings":"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","sources":["APIRequest/RestClient.js","APIRequest/SummaryRequest.js","helpers/ToastMessage.js","pages/Dashboard/LeaveChart.jsx","pages/Dashboard/EmployeeDashboard.jsx","pages/Dashboard/Statistics.jsx"],"sourcesContent":["//External Lib Import\r\nimport axios from \"axios\";\r\nimport SessionHelper from \"../helpers/SessionHelper\";\r\nimport ToastMessage from \"../helpers/ToastMessage\";\r\nimport { SetLogout } from \"../redux/slices/AuthSlice\";\r\nimport { RemoveLoading, SetLoading } from \"../redux/slices/LoaderSlice\";\r\nimport { RemoveUserDetails } from \"../redux/slices/UserSlice\";\r\nimport store from \"../redux/store/store\";\r\n\r\n//Axios default setting\r\naxios.defaults.baseURL = \"http://localhost:3500/api/v1\";\r\naxios.defaults.headers.post[\"Content-Type\"] =\r\n  \"application/x-www-form-urlencoded\";\r\n\r\nfunction axiosHeaders() {\r\n  axios.defaults.headers.common[\"Authorization\"] =\r\n    \"Bearer \" + SessionHelper.GetToken();\r\n}\r\n\r\nconst ResponseReturn = (response) => {\r\n  store.dispatch(RemoveLoading());\r\n  return response;\r\n};\r\n\r\n// const ErrorReturn = (error) => {\r\n//   store.dispatch(RemoveLoading());\r\n//   if (error.response.status === 500) {\r\n//     ToastMessage.errorMessage(\"Sorry, Something went wrong\");\r\n//   } else if (error.response.status === 401) {\r\n//     ToastMessage.errorMessage(error.response.data.message);\r\n//     store.dispatch(SetLogout());\r\n//     store.dispatch(RemoveUserDetails());\r\n//   } else {\r\n//     ToastMessage.errorMessage(error.response.data.message);\r\n//   }\r\n\r\n//   return false;\r\n// };\r\n\r\nconst ErrorReturn = (error) => {\r\n  store.dispatch(RemoveLoading());\r\n\r\n  // Check if error.response exists\r\n  if (error.response) {\r\n    if (error.response.status === 500) {\r\n      ToastMessage.errorMessage(\"Sorry, Something went wrong\");\r\n    } else if (error.response.status === 401) {\r\n      ToastMessage.errorMessage(error.response.data.message);\r\n      store.dispatch(SetLogout());\r\n      store.dispatch(RemoveUserDetails());\r\n    } else {\r\n      ToastMessage.errorMessage(error.response.data.message);\r\n    }\r\n  } else {\r\n    // Handle cases where error.response is undefined\r\n    ToastMessage.errorMessage(\"Network error or unexpected error occurred\");\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\n\r\nclass RestClient {\r\n  static async getRequest(url) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .get(url, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async postRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .post(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        store.dispatch(RemoveLoading());\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async updateRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .patch(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async putRequest(url, postBody) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .put(url, postBody, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n  static async deleteRequest(url) {\r\n    store.dispatch(SetLoading());\r\n    return await axios\r\n      .delete(url, axiosHeaders())\r\n      .then((response) => {\r\n        return ResponseReturn(response);\r\n      })\r\n      .catch((error) => {\r\n        return ErrorReturn(error);\r\n      });\r\n  }\r\n}\r\n\r\nexport default RestClient;\r\n","//Internal Import\r\nimport { SetTotalSummary, SetSummaryLists } from \"../redux/slices/SummarySlice\";\r\nimport store from \"../redux/store/store\";\r\nimport RestClient from \"./RestClient\";\r\n\r\nclass SummaryRequest {\r\n  static async DashboardSummaryAdmin() {\r\n    const { data } = await RestClient.getRequest(\r\n      `/Summary/DashboardSummaryAdmin`,\r\n    );\r\n\r\n    if (data) {\r\n      const total = data?.[0]?.Total[0]?.count;\r\n      store.dispatch(SetSummaryLists(data?.[0]?.Data));\r\n      store.dispatch(SetTotalSummary(total || 0));\r\n    }\r\n  }\r\n\r\n  static async DashboardSummaryHod() {\r\n    const { data } = await RestClient.getRequest(\r\n      `/Summary/DashboardSummaryHod`,\r\n    );\r\n\r\n    if (data) {\r\n      const total = data?.[0]?.Total[0]?.count;\r\n      store.dispatch(SetSummaryLists(data?.[0]?.Data));\r\n      store.dispatch(SetTotalSummary(total || 0));\r\n    }\r\n  }\r\n\r\n  static async DashboardSummaryEmployee() {\r\n    const { data } = await RestClient.getRequest(\r\n      `/Summary/DashboardSummaryEmployee`,\r\n    );\r\n\r\n    if (data) {\r\n      const total = data?.[0]?.Total[0]?.count;\r\n      store.dispatch(SetSummaryLists(data?.[0]?.Data));\r\n      store.dispatch(SetTotalSummary(total || 0));\r\n    }\r\n  }\r\n}\r\n\r\nexport default SummaryRequest;\r\n","//External Lib Import\r\nimport toast from \"react-hot-toast\";\r\n\r\nclass ToastMessage {\r\n  static successMessage(msg) {\r\n    return toast.success(msg, {\r\n      position: \"top-center\",\r\n    });\r\n  }\r\n  static errorMessage(msg) {\r\n    return toast.error(msg, {\r\n      position: \"top-center\",\r\n    });\r\n  }\r\n}\r\n\r\nexport default ToastMessage;\r\n","// @flow\r\nimport classNames from \"classnames\";\r\nimport React from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nconst LeaveChart = ({ summaryLists }) => {\r\n  const apexDonutOpts = {\r\n    chart: {\r\n      height: 340,\r\n      type: \"donut\",\r\n    },\r\n    colors: [\"#0acf97\", \"#fa5c7c\", \"#ffbc00\"],\r\n    legend: {\r\n      show: false,\r\n    },\r\n    responsive: [\r\n      {\r\n        breakpoint: 376,\r\n        options: {\r\n          chart: {\r\n            width: 250,\r\n            height: 250,\r\n          },\r\n          legend: {\r\n            position: \"bottom\",\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <Chart\r\n          options={apexDonutOpts}\r\n          series={summaryLists?.map((i) => i.count)}\r\n          type=\"donut\"\r\n          height={222}\r\n          className=\"apex-charts mb-4 mt-4\"\r\n        />\r\n\r\n        <div className=\"chart-widget-list\">\r\n          {summaryLists?.map((summary) => (\r\n            <p>\r\n              <i\r\n                className={classNames(\"mdi mdi-square\", {\r\n                  \"text-warning\": summary?._id === \"Pending\",\r\n                  \"text-danger\": summary?._id === \"Rejected\",\r\n                  \"text-success\": summary?._id === \"Approved\",\r\n                })}\r\n              ></i>\r\n              {summary?._id}\r\n              <span className=\"float-end\">{summary?.count || 0}</span>\r\n            </p>\r\n          ))}\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default LeaveChart;\r\n","// @flow\r\nimport React, { useEffect } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n// components\r\nimport Statistics from \"./Statistics\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SummaryRequest from \"../../APIRequest/SummaryRequest\";\r\nimport LeaveChart from \"./LeaveChart\";\r\n\r\nconst EmployeeDashboard = () => {\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    SummaryRequest.DashboardSummaryEmployee();\r\n  }, []);\r\n\r\n  const { SummaryLists, TotalSummary } = useSelector((state) => state.Summary);\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col xs={12}>\r\n          <div className=\"page-title-box\">\r\n            <div className=\"page-title-right\"></div>\r\n            <h4 className=\"page-title\"> {t(\"Dashboard\")}</h4>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <LeaveChart summaryLists={SummaryLists}/>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmployeeDashboard;\r\n","// @flow\r\nimport classNames from \"classnames\";\r\nimport React from \"react\";\r\nimport { Card, Row, Col } from \"react-bootstrap\";\r\n\r\nconst Statistics = ({ totalLeave, summaryLists }) => {\r\n  return (\r\n    <Row>\r\n      <Col xs={12}>\r\n        <Card className=\"widget-inline\">\r\n          <Card.Body className=\"p-0\">\r\n            <Row className=\"g-0\">\r\n              <Col sm={6} lg={3}>\r\n                <Card className=\"shadow-none m-0\">\r\n                  <Card.Body className=\"text-center\">\r\n                    <i className=\"dripicons-clipboard text-muted font-24\"></i>\r\n                    <h3>\r\n                      <span>{totalLeave || 0}</span>\r\n                    </h3>\r\n                    <p className=\"text-muted font-15 mb-0\">Total Leave</p>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n\r\n              {summaryLists?.map((summary) => (\r\n                <Col sm={6} lg={3}>\r\n                  <Card className=\"shadow-none m-0 border-start\">\r\n                    <Card.Body className=\"text-center\">\r\n                      <i\r\n                        className={classNames(\"text-muted font-24\", {\r\n                          \"dripicons-hourglass\": summary?._id === \"Pending\",\r\n                          \"dripicons-document-delete\":\r\n                            summary?._id === \"Rejected\",\r\n                          \"dripicons-thumbs-up\": summary?._id === \"Approved\",\r\n                        })}\r\n                      ></i>\r\n                      <h3>\r\n                        <span>{summary?.count || 0}</span>\r\n                        <i\r\n                          className={classNames(\"mdi mdi-arrow-up\", {\r\n                            \"text-warning\": summary?._id === \"Pending\",\r\n                            \"text-danger\": summary?._id === \"Rejected\",\r\n                            \"text-success\": summary?._id === \"Approved\",\r\n                          })}\r\n                        ></i>\r\n                      </h3>\r\n                      <p className=\"text-muted font-15 mb-0\">\r\n                        {summary?._id} Leave\r\n                      </p>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n"],"names":["axiosHeaders","axios","defaults","headers","common","SessionHelper","GetToken","baseURL","post","ResponseReturn","response","store","dispatch","RemoveLoading","ErrorReturn","error","status","ToastMessage","errorMessage","data","message","SetLogout","RemoveUserDetails","RestClient","_classCallCheck","_createClass","key","value","_getRequest","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","wrap","_context","prev","next","SetLoading","get","then","catch","abrupt","sent","stop","_x","apply","arguments","_postRequest","_callee2","postBody","_context2","_x2","_x3","_updateRequest","_callee3","_context3","patch","_x4","_x5","_putRequest","_callee4","_context4","put","_x6","_x7","_deleteRequest","_callee5","_context5","delete","_x8","SummaryRequest","_DashboardSummaryAdmin","_yield$RestClient$get","_data$","_data$$Total$","_data$2","total","getRequest","Total","count","SetSummaryLists","Data","SetTotalSummary","_DashboardSummaryHod","_yield$RestClient$get2","_data$3","_data$3$Total$","_data$4","_DashboardSummaryEmployee","_yield$RestClient$get3","_data$5","_data$5$Total$","_data$6","msg","toast","success","position","_ref","summaryLists","_jsx","Card","children","_jsxs","Body","Chart","options","chart","height","type","colors","legend","show","responsive","breakpoint","width","series","map","i","className","summary","classNames","_id","t","useTranslation","useEffect","DashboardSummaryEmployee","_useSelector","useSelector","state","Summary","SummaryLists","TotalSummary","_Fragment","Row","Col","xs","LeaveChart","totalLeave","sm","lg"],"sourceRoot":""}