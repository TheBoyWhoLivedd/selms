{"version":3,"file":"static/js/552.1b49b7d1.chunk.js","mappings":"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","sources":["APIRequest/UserRequest.js","components/Ui/PageTitle.js","pages/Profile/ChangePasswordPage.jsx","../node_modules/react-bootstrap/esm/BreadcrumbItem.js","../node_modules/react-bootstrap/esm/Breadcrumb.js"],"sourcesContent":["//Internal Import\r\nimport SessionHelper from \"../helpers/SessionHelper\";\r\nimport ToastMessage from \"../helpers/ToastMessage\";\r\nimport { SetUserDetails } from \"../redux/slices/UserSlice\";\r\nimport store from \"../redux/store/store\";\r\nimport RestClient from \"./RestClient\";\r\n\r\nclass UserRequest {\r\n  static async ProfileDetails() {\r\n    const { data } = await RestClient.getRequest(\"/Employee/ProfileDetails\");\r\n    if (data) {\r\n      store.dispatch(SetUserDetails(data?.[0]));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async SendRecoveryOtp(Email) {\r\n    const { data } = await RestClient.getRequest(\r\n      `/Employee/SendRecoveryOtp/${Email}`,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      SessionHelper.SetRecoverVerifyEmail(Email);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async VerifyRecoveryOtp(Otp) {\r\n    const Email = SessionHelper.GetRecoverVerifyEmail();\r\n    console.log(Email);\r\n    const { data } = await RestClient.getRequest(\r\n      `/Employee/VerifyRecoveryOtp/${Email}/${Otp}`,\r\n    );\r\n    if (data) {\r\n      SessionHelper.SetRecoverVerifyOTP(Otp);\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async RecoveryResetPass(PostBody) {\r\n    const Email = SessionHelper.GetRecoverVerifyEmail();\r\n    const Otp = SessionHelper.GetRecoverVerifyOTP();\r\n    const { data } = await RestClient.postRequest(\r\n      `/Employee/RecoveryResetPass/${Email}/${Otp}`,\r\n      PostBody,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async VerifyAccountSentOtp() {\r\n    const Email = SessionHelper.GetRecoverVerifyEmail();\r\n    console.log(Email);\r\n    const { data } = await RestClient.getRequest(\r\n      `/User/VerifyAccountSentOtp/${Email}`,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async VerifyAccountVerifyOtp(Email, Otp) {\r\n    const { data } = await RestClient.getRequest(\r\n      `/User/VerifyAccountVerifyOtp/${Email}/${Otp}`,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async ProfileUpdate(PostBody) {\r\n    const { data } = await RestClient.updateRequest(\r\n      `/Employee/ProfileUpdate`,\r\n      PostBody,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async EmployeeChangePassword(PostBody) {\r\n    const { data } = await RestClient.putRequest(\r\n      `/Employee/EmployeeChangePassword`,\r\n      PostBody,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nexport default UserRequest;\r\n","// @flow\r\nimport React from \"react\";\r\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\r\n\r\ntype BreadcrumbItems = {\r\n  label: string,\r\n  path: string,\r\n  active?: boolean,\r\n};\r\n\r\ntype PageTitleProps = {\r\n  breadCrumbItems: Array<BreadcrumbItems>,\r\n  title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <div className=\"page-title-box\">\r\n          <div className=\"page-title-right\">\r\n            <Breadcrumb listProps={{ className: \"m-0\" }}>\r\n              <Breadcrumb.Item href=\"/dashboard\">Dashboard</Breadcrumb.Item>\r\n\r\n              {props.breadCrumbItems.map((item, index) => {\r\n                return item.active ? (\r\n                  <Breadcrumb.Item active key={index}>\r\n                    {item.label}\r\n                  </Breadcrumb.Item>\r\n                ) : (\r\n                  <Breadcrumb.Item key={index} href={item.path}>\r\n                    {item.label}\r\n                  </Breadcrumb.Item>\r\n                );\r\n              })}\r\n            </Breadcrumb>\r\n          </div>\r\n          <h4 className=\"page-title\">{props.title}</h4>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default PageTitle;\r\n","//External Lib Import\r\nimport { useSelector } from \"react-redux\";\r\nimport { Row, Col, Card, Button } from \"react-bootstrap\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//Internal Lib Import\r\nimport PageTitle from \"../../components/Ui/PageTitle\";\r\nimport { FormInput } from \"../../components/Ui\";\r\nimport { VerticalForm } from \"../../components/Ui\";\r\nimport UserRequest from \"../../APIRequest/UserRequest\";\r\n\r\nconst ChangePasswordPage = () => {\r\n  const { t } = useTranslation();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  /*\r\n   * form validation schema\r\n   */\r\n  const validationSchema = yup.object().shape({\r\n    PreviousPassword: yup.string().required(\"Please Enter Previous Password\"),\r\n    NewPassword: yup.string().required(\"Please Enter New Password\"),\r\n    PasswordConfirmation: yup\r\n      .string()\r\n      .required(\"Please Enter Confirm Password\")\r\n      .oneOf([yup.ref(\"NewPassword\"), null], \"Passwords must match\"),\r\n  });\r\n\r\n  /**\r\n   * Handle the form submission\r\n   */\r\n  const CreateUpdateEmployee = (values) => {\r\n    UserRequest.EmployeeChangePassword({\r\n      PreviousPassword: values.PreviousPassword,\r\n      NewPassword: values.NewPassword,\r\n    }).then((result) => {\r\n      if (result) {\r\n        navigate(\"/dashboard\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PageTitle\r\n        breadCrumbItems={[\r\n          { label: \"Setting\", path: \"/dashboard\" },\r\n          {\r\n            label: \"Update Setting\",\r\n            path: \"/dashboard\",\r\n            active: true,\r\n          },\r\n        ]}\r\n        title=\"Update Password\"\r\n      />\r\n\r\n      <Row>\r\n        <Col>\r\n          <Card>\r\n            <Card.Body>\r\n              <Row>\r\n                <Col>\r\n                  <VerticalForm\r\n                    onSubmit={CreateUpdateEmployee}\r\n                    validationSchema={validationSchema}\r\n                    defaultValues={{\r\n                      PreviousPassword: \"\",\r\n                      NewPassword: \"\",\r\n                      PasswordConfirmation: \"\",\r\n                    }}\r\n                  >\r\n                    <Row>\r\n                      <Col sm={12}>\r\n                        <FormInput\r\n                          name=\"PreviousPassword\"\r\n                          label={t(\"Previous Password\")}\r\n                          placeholder={t(\"Enter Previous Password\")}\r\n                          containerClass={\"mb-3\"}\r\n                          type=\"password\"\r\n                        />\r\n                      </Col>\r\n                      <Col sm={12}>\r\n                        <FormInput\r\n                          name=\"NewPassword\"\r\n                          label={t(\"New Password\")}\r\n                          placeholder={t(\"Enter New Password\")}\r\n                          containerClass={\"mb-3\"}\r\n                          type=\"password\"\r\n                        />\r\n                      </Col>\r\n                      <Col sm={12}>\r\n                        <FormInput\r\n                          name=\"PasswordConfirmation\"\r\n                          label={t(\"Confirm New Password\")}\r\n                          placeholder={t(\"Enter Confirm New Password\")}\r\n                          containerClass={\"mb-3\"}\r\n                          type=\"password\"\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row className=\"mt-2\">\r\n                      <Col>\r\n                        <Button type=\"submit\" variant=\"success\">\r\n                          Update Profile\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </VerticalForm>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangePasswordPage;\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active = false,\n  children,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'li',\n  linkAs: LinkComponent = Anchor,\n  linkProps = {},\n  href,\n  title,\n  target,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(prefix, className, {\n      active\n    }),\n    \"aria-current\": active ? 'page' : undefined,\n    children: active ? children : /*#__PURE__*/_jsx(LinkComponent, {\n      ...linkProps,\n      href: href,\n      title: title,\n      target: target,\n      children: children\n    })\n  });\n});\nBreadcrumbItem.displayName = 'BreadcrumbItem';\nexport default BreadcrumbItem;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Breadcrumb = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  listProps = {},\n  children,\n  label = 'breadcrumb',\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'nav',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb');\n  return /*#__PURE__*/_jsx(Component, {\n    \"aria-label\": label,\n    className: className,\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"ol\", {\n      ...listProps,\n      className: classNames(prefix, listProps == null ? void 0 : listProps.className),\n      children: children\n    })\n  });\n});\nBreadcrumb.displayName = 'Breadcrumb';\nexport default Object.assign(Breadcrumb, {\n  Item: BreadcrumbItem\n});"],"names":["UserRequest","_classCallCheck","_createClass","key","value","_ProfileDetails","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$RestClient$get","data","wrap","_context","prev","next","RestClient","getRequest","sent","store","dispatch","SetUserDetails","abrupt","stop","apply","arguments","_SendRecoveryOtp","_callee2","Email","_yield$RestClient$get2","_context2","concat","ToastMessage","successMessage","message","SessionHelper","SetRecoverVerifyEmail","_x","_VerifyRecoveryOtp","_callee3","Otp","_yield$RestClient$get3","_context3","GetRecoverVerifyEmail","console","log","SetRecoverVerifyOTP","_x2","_RecoveryResetPass","_callee4","PostBody","_yield$RestClient$pos","_context4","GetRecoverVerifyOTP","postRequest","_x3","_VerifyAccountSentOtp","_callee5","_yield$RestClient$get4","_context5","_VerifyAccountVerifyOtp","_callee6","_yield$RestClient$get5","_context6","_x4","_x5","_ProfileUpdate","_callee7","_yield$RestClient$upd","_context7","updateRequest","_x6","_EmployeeChangePassword","_callee8","_yield$RestClient$put","_context8","putRequest","_x7","props","_jsx","Row","children","Col","_jsxs","className","Breadcrumb","listProps","Item","href","breadCrumbItems","map","item","index","active","label","path","title","t","useTranslation","navigate","useNavigate","validationSchema","yup","shape","PreviousPassword","required","NewPassword","PasswordConfirmation","oneOf","_Fragment","PageTitle","Card","Body","VerticalForm","onSubmit","values","EmployeeChangePassword","then","result","defaultValues","sm","FormInput","name","placeholder","containerClass","type","Button","variant","_excluded","BreadcrumbItem","React","_ref","ref","bsPrefix","_ref$active","_ref$as","as","Component","_ref$linkAs","linkAs","LinkComponent","Anchor","_ref$linkProps","linkProps","target","_objectWithoutProperties","prefix","useBootstrapPrefix","_objectSpread","classNames","undefined","displayName","_ref$listProps","_ref$label","Object","assign"],"sourceRoot":""}